{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","movieTemplate","FindMovie","setMovies","useState","setMovie","inputValue","setInputValue","isLoading","setIsLoading","isNotFind","setIsNotFind","htmlFor","type","id","placeholder","classNames","value","onChange","e","currentTarget","disabled","onClick","query","preventDefault","fetch","then","res","json","catch","Response","Error","foundMovie","Poster","Title","Plot","imdbID","prevState","finally","prevMovie","some","film","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c0d7311.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\nconst movieTemplate = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const FindMovie: React.FC<{\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>\n}> = ({ setMovies }) => {\n  const [movie, setMovie] = useState<Movie>(movieTemplate);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNotFind, setIsNotFind] = useState(false);\n\n  const searchFilm = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setIsLoading(false);\n\n    getMovie(inputValue)\n      .then((foundMovie) => {\n        const {\n          Poster = 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          Title,\n          Plot,\n          imdbID,\n        } = foundMovie as MovieData;\n\n        setMovie((prevState) => {\n          return {\n            ...prevState,\n            imgUrl: Poster,\n            title: Title,\n            description: Plot,\n            imdbId: imdbID,\n            imdbUrl: `http://www.imdb/title/${imdbID}`,\n          };\n        });\n\n        if (Title === movie.title) {\n          setIsNotFind(true);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleFilm = () => {\n    if (movie.title) {\n      setMovies((prevMovie) => {\n        if (prevMovie.some((film) => film.imdbId === movie.imdbId)) {\n          return prevMovie;\n        }\n\n        return [...prevMovie, movie];\n      });\n    }\n\n    setInputValue('');\n    setMovie(movieTemplate);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isNotFind && inputValue,\n              })}\n              value={inputValue}\n              onChange={(e) => {\n                setMovie(movieTemplate);\n                setIsNotFind(false);\n                setInputValue(e.currentTarget.value);\n              }}\n            />\n          </div>\n\n          {isNotFind && inputValue && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={inputValue === ''}\n              className={classNames('button is-light',\n                { 'is-loading': isLoading })}\n              onClick={searchFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          { inputValue && movie.title && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleFilm}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n      { movie.title && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst key = '4a4ecfed';\nconst API_URL = 'https://www.omdbapi.com/?';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&apikey=${key}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}